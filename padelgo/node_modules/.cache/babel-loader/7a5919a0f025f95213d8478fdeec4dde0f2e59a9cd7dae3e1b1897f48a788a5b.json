{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aflo2\\\\Desktop\\\\P2I\\\\padelgo\\\\src\\\\Components\\\\Connexion.js\",\n  _s = $RefreshSig$();\n// Connexion.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../Style/Inscription.css';\nimport logoConnexion from '../Images/LOGO2.png';\nimport marque from '../Images/PadelGo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Connexion() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [motDePasse, setMotDePasse] = useState('');\n  const [erreur, setErreur] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setErreur('');\n\n    // Vérifie si l'email et le mot de passe ne sont pas vides\n    if (!email && !motDePasse) {\n      setErreur('Veuillez saisir un e-mail et un mot de passe.');\n      return;\n    }\n\n    // Vérifie si l'email est vide\n    if (!email) {\n      setErreur('L’adresse e-mail est obligatoire.');\n      return;\n    }\n\n    // Vérifie si le mot de passe est vide\n    if (!motDePasse) {\n      setErreur('Le mot de passe est obligatoire.');\n      return;\n    }\n\n    // Validation simple du format de l'email\n    if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      setErreur('Le format de l’adresse e-mail est invalide.');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5002/api/utilisateur/connexion', {\n        Mail: email,\n        MotDePasse: motDePasse\n      });\n      if (response.status === 200) {\n        // Connexion réussie, redirection vers la page d'accueil\n        navigate('/accueil');\n      } else {\n        // Gestion des réponses non réussies du serveur\n        setErreur('Connexion échouée. Veuillez vérifier vos informations.');\n      }\n    } catch (error) {\n      // Gestion spécifique du code d'état 401 pour l'erreur d'autorisation\n      if (error.response && error.response.status === 401) {\n        setErreur('L’e-mail ou le mot de passe ne correspond pas à nos enregistrements.');\n      } else {\n        // Gestion des autres erreurs\n        setErreur('Un problème est survenu lors de la connexion. Veuillez réessayer plus tard.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(Connexion, \"+PFxReksYJ39byHpajr7SmCpsWk=\", false, function () {\n  return [useNavigate];\n});\n_c = Connexion;\nexport default Connexion;\nvar _c;\n$RefreshReg$(_c, \"Connexion\");","map":{"version":3,"names":["React","useState","useNavigate","axios","logoConnexion","marque","jsxDEV","_jsxDEV","Connexion","_s","email","setEmail","motDePasse","setMotDePasse","erreur","setErreur","navigate","handleSubmit","e","preventDefault","test","response","post","Mail","MotDePasse","status","error","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/aflo2/Desktop/P2I/padelgo/src/Components/Connexion.js"],"sourcesContent":["// Connexion.js\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport '../Style/Inscription.css';\r\nimport logoConnexion from '../Images/LOGO2.png';\r\nimport marque from '../Images/PadelGo.png';\r\n\r\nfunction Connexion() {\r\n    const [email, setEmail] = useState('');\r\n    const [motDePasse, setMotDePasse] = useState('');\r\n    const [erreur, setErreur] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setErreur('');\r\n\r\n        // Vérifie si l'email et le mot de passe ne sont pas vides\r\n        if (!email && !motDePasse) {\r\n            setErreur('Veuillez saisir un e-mail et un mot de passe.');\r\n            return;\r\n        }\r\n\r\n        // Vérifie si l'email est vide\r\n        if (!email) {\r\n            setErreur('L’adresse e-mail est obligatoire.');\r\n            return;\r\n        }\r\n\r\n        // Vérifie si le mot de passe est vide\r\n        if (!motDePasse) {\r\n            setErreur('Le mot de passe est obligatoire.');\r\n            return;\r\n        }\r\n\r\n        // Validation simple du format de l'email\r\n        if (!/\\S+@\\S+\\.\\S+/.test(email)) {\r\n            setErreur('Le format de l’adresse e-mail est invalide.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:5002/api/utilisateur/connexion', {\r\n                Mail: email,\r\n                MotDePasse: motDePasse,\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                // Connexion réussie, redirection vers la page d'accueil\r\n                navigate('/accueil');\r\n            } else {\r\n                // Gestion des réponses non réussies du serveur\r\n                setErreur('Connexion échouée. Veuillez vérifier vos informations.');\r\n            }\r\n        } catch (error) {\r\n            // Gestion spécifique du code d'état 401 pour l'erreur d'autorisation\r\n            if (error.response && error.response.status === 401) {\r\n                setErreur('L’e-mail ou le mot de passe ne correspond pas à nos enregistrements.');\r\n            } else {\r\n                // Gestion des autres erreurs\r\n                setErreur('Un problème est survenu lors de la connexion. Veuillez réessayer plus tard.');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"page-container\">\r\n            {/* ...le reste de votre code */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Connexion;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,0BAA0B;AACjC,OAAOC,aAAa,MAAM,qBAAqB;AAC/C,OAAOC,MAAM,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMe,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAE9B,MAAMe,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBJ,SAAS,CAAC,EAAE,CAAC;;IAEb;IACA,IAAI,CAACL,KAAK,IAAI,CAACE,UAAU,EAAE;MACvBG,SAAS,CAAC,+CAA+C,CAAC;MAC1D;IACJ;;IAEA;IACA,IAAI,CAACL,KAAK,EAAE;MACRK,SAAS,CAAC,mCAAmC,CAAC;MAC9C;IACJ;;IAEA;IACA,IAAI,CAACH,UAAU,EAAE;MACbG,SAAS,CAAC,kCAAkC,CAAC;MAC7C;IACJ;;IAEA;IACA,IAAI,CAAC,cAAc,CAACK,IAAI,CAACV,KAAK,CAAC,EAAE;MAC7BK,SAAS,CAAC,6CAA6C,CAAC;MACxD;IACJ;IAEA,IAAI;MACA,MAAMM,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,iDAAiD,EAAE;QACjFC,IAAI,EAAEb,KAAK;QACXc,UAAU,EAAEZ;MAChB,CAAC,CAAC;MAEF,IAAIS,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;QACzB;QACAT,QAAQ,CAAC,UAAU,CAAC;MACxB,CAAC,MAAM;QACH;QACAD,SAAS,CAAC,wDAAwD,CAAC;MACvE;IACJ,CAAC,CAAC,OAAOW,KAAK,EAAE;MACZ;MACA,IAAIA,KAAK,CAACL,QAAQ,IAAIK,KAAK,CAACL,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;QACjDV,SAAS,CAAC,sEAAsE,CAAC;MACrF,CAAC,MAAM;QACH;QACAA,SAAS,CAAC,6EAA6E,CAAC;MAC5F;IACJ;EACJ,CAAC;EAED,oBACIR,OAAA;IAAKoB,SAAS,EAAC;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE1B,CAAC;AAEd;AAACtB,EAAA,CAhEQD,SAAS;EAAA,QAKGN,WAAW;AAAA;AAAA8B,EAAA,GALvBxB,SAAS;AAkElB,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}