// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PadelGo.Data;

#nullable disable

namespace PadelGo.Migrations
{
    [DbContext(typeof(PadelGoContexte))]
    [Migration("20240207102804_migration2")]
    partial class migration2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.12");

            modelBuilder.Entity("PadelGo.Models.Administrateur", b =>
                {
                    b.Property<int>("AdministrateurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AdministrateurId");

                    b.ToTable("Administrateurs");
                });

            modelBuilder.Entity("PadelGo.Models.Club", b =>
                {
                    b.Property<int>("ClubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Ville")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ClubId");

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("PadelGo.Models.Equipe", b =>
                {
                    b.Property<int>("EquipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomJoueur1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomJoueur2")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PoidsEquipe")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TournoiId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EquipeId");

                    b.HasIndex("TournoiId");

                    b.ToTable("Equipes");
                });

            modelBuilder.Entity("PadelGo.Models.Inscription", b =>
                {
                    b.Property<int>("InscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateInscription")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EstConfirmee")
                        .HasColumnType("INTEGER");

                    b.Property<int>("JoueurId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TournoiId")
                        .HasColumnType("INTEGER");

                    b.HasKey("InscriptionId");

                    b.HasIndex("JoueurId");

                    b.HasIndex("TournoiId");

                    b.ToTable("Inscriptions");
                });

            modelBuilder.Entity("PadelGo.Models.Joueur", b =>
                {
                    b.Property<int>("JoueurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Classement")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroLicence")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("JoueurId");

                    b.ToTable("Joueurs");
                });

            modelBuilder.Entity("PadelGo.Models.Tournoi", b =>
                {
                    b.Property<int>("TournoiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Categorie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ClubId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Niveau")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NombreEquipe")
                        .HasColumnType("INTEGER");

                    b.HasKey("TournoiId");

                    b.HasIndex("ClubId");

                    b.ToTable("Tournois");
                });

            modelBuilder.Entity("PadelGo.Models.Utilisateur", b =>
                {
                    b.Property<int>("UtilisateurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UtilisateurId");

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("PadelGo.Models.Equipe", b =>
                {
                    b.HasOne("PadelGo.Models.Tournoi", null)
                        .WithMany("Equipes")
                        .HasForeignKey("TournoiId");
                });

            modelBuilder.Entity("PadelGo.Models.Inscription", b =>
                {
                    b.HasOne("PadelGo.Models.Joueur", "Joueur")
                        .WithMany()
                        .HasForeignKey("JoueurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PadelGo.Models.Tournoi", "Tournoi")
                        .WithMany()
                        .HasForeignKey("TournoiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Joueur");

                    b.Navigation("Tournoi");
                });

            modelBuilder.Entity("PadelGo.Models.Tournoi", b =>
                {
                    b.HasOne("PadelGo.Models.Club", null)
                        .WithMany("Tournois")
                        .HasForeignKey("ClubId");
                });

            modelBuilder.Entity("PadelGo.Models.Club", b =>
                {
                    b.Navigation("Tournois");
                });

            modelBuilder.Entity("PadelGo.Models.Tournoi", b =>
                {
                    b.Navigation("Equipes");
                });
#pragma warning restore 612, 618
        }
    }
}
